package proyectofc;

import java.awt.Component;

/**
 *
 * @author Marcos M.C.
 */
public class PConfig extends javax.swing.JDialog {

    private boolean mantenerCambios = true;
    //La siguiente variable determina si el cronometro esta en modo round o en modo eliminatoria
    private boolean enRound = true;
    //La siguiente variable determina si el cronometro esta en modo de sala o de aire libre (variacion en los tiempos)
    private boolean enSala = true;
    private boolean calentamiento = false;
    private int tipoTurno = 1;
    
    public PConfig(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        //el fragmento de codigo a continuacion establece como disabled al iniciar, las opciones de eliminatorias
//        for(Component componenteActual : jPanelElim.getComponents()){
//            componenteActual.setEnabled(false);
//        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gbRound_Elim = new javax.swing.ButtonGroup();
        gbTipoComp = new javax.swing.ButtonGroup();
        jPanelConfig = new javax.swing.JPanel();
        jPanelRound = new javax.swing.JPanel();
        lTipoTurno = new javax.swing.JLabel();
        cbTipoTurno = new javax.swing.JComboBox<>();
        rbSala = new javax.swing.JRadioButton();
        rbAireLibre = new javax.swing.JRadioButton();
        cbCalentamiento = new javax.swing.JCheckBox();
        rbRound = new javax.swing.JRadioButton();
        rbElim = new javax.swing.JRadioButton();
        bSaveChn = new javax.swing.JButton();
        bCant = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Configuración");

        jPanelConfig.setToolTipText("Configuración");

        lTipoTurno.setText("Tipo de Turno");
        lTipoTurno.setToolTipText("Tipo de Turno");

        cbTipoTurno.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AB-CD-CD-AB", "CD-AB-AB-CD", "AB-CD-AB-CD", "CD-AB-CD-AB", "AB-AB-AB-AB" }));
        cbTipoTurno.setToolTipText("Desplegable de turnos");
        cbTipoTurno.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbTipoTurnoItemStateChanged(evt);
            }
        });

        gbTipoComp.add(rbSala);
        rbSala.setSelected(true);
        rbSala.setText("Sala");
        rbSala.setToolTipText("Sala");
        rbSala.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rbSalaMouseClicked(evt);
            }
        });

        gbTipoComp.add(rbAireLibre);
        rbAireLibre.setText("Aire Libre");
        rbAireLibre.setToolTipText("Aire Libre");
        rbAireLibre.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rbAireLibreMouseClicked(evt);
            }
        });

        cbCalentamiento.setText("Calentamiento");
        cbCalentamiento.setToolTipText("Calentamiento");
        cbCalentamiento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCalentamientoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelRoundLayout = new javax.swing.GroupLayout(jPanelRound);
        jPanelRound.setLayout(jPanelRoundLayout);
        jPanelRoundLayout.setHorizontalGroup(
            jPanelRoundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRoundLayout.createSequentialGroup()
                .addGroup(jPanelRoundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelRoundLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanelRoundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(rbSala)
                            .addComponent(lTipoTurno))
                        .addGroup(jPanelRoundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelRoundLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(cbTipoTurno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelRoundLayout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(rbAireLibre))))
                    .addGroup(jPanelRoundLayout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(cbCalentamiento)))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanelRoundLayout.setVerticalGroup(
            jPanelRoundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRoundLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelRoundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lTipoTurno)
                    .addComponent(cbTipoTurno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelRoundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbSala)
                    .addComponent(rbAireLibre))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(cbCalentamiento))
        );

        gbRound_Elim.add(rbRound);
        rbRound.setSelected(true);
        rbRound.setText("Round");
        rbRound.setToolTipText("Round");
        rbRound.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rbRoundMouseClicked(evt);
            }
        });

        gbRound_Elim.add(rbElim);
        rbElim.setText("Eliminatorias");
        rbElim.setToolTipText("Eliminatorias");
        rbElim.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rbElimMouseClicked(evt);
            }
        });
        rbElim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbElimActionPerformed(evt);
            }
        });

        bSaveChn.setBackground(new java.awt.Color(153, 204, 255));
        bSaveChn.setForeground(new java.awt.Color(0, 0, 0));
        bSaveChn.setText("Guardar Cambios");
        bSaveChn.setToolTipText("Guardar Cambios");
        bSaveChn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSaveChnActionPerformed(evt);
            }
        });

        bCant.setBackground(new java.awt.Color(255, 255, 255));
        bCant.setForeground(new java.awt.Color(0, 0, 0));
        bCant.setText("Cancelar");
        bCant.setToolTipText("Cancelar");
        bCant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCantActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelConfigLayout = new javax.swing.GroupLayout(jPanelConfig);
        jPanelConfig.setLayout(jPanelConfigLayout);
        jPanelConfigLayout.setHorizontalGroup(
            jPanelConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelConfigLayout.createSequentialGroup()
                .addGroup(jPanelConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelConfigLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanelRound, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelConfigLayout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(bCant)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bSaveChn)))
                .addContainerGap(63, Short.MAX_VALUE))
            .addGroup(jPanelConfigLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(rbRound)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(rbElim)
                .addGap(41, 41, 41))
        );
        jPanelConfigLayout.setVerticalGroup(
            jPanelConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelConfigLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanelConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbRound)
                    .addComponent(rbElim))
                .addGap(18, 18, 18)
                .addComponent(jPanelRound, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 118, Short.MAX_VALUE)
                .addGroup(jPanelConfigLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bSaveChn)
                    .addComponent(bCant))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelConfig, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelConfig, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rbRoundMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rbRoundMouseClicked
        for(Component componenteActual : jPanelRound.getComponents()){
            componenteActual.setEnabled(true);
        }
//        for(Component componenteActual : jPanelElim.getComponents()){
//            componenteActual.setEnabled(false);
//        }
        enRound = true;
    }//GEN-LAST:event_rbRoundMouseClicked

    private void rbElimMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rbElimMouseClicked
//        for(Component componenteActual : jPanelElim.getComponents()){
//            componenteActual.setEnabled(true);
//        }
        for(Component componenteActual : jPanelRound.getComponents()){
            componenteActual.setEnabled(false);
            rbSala.setEnabled(true);
            rbAireLibre.setEnabled(true);
        }
        enRound = false;
    }//GEN-LAST:event_rbElimMouseClicked

    private void cbTipoTurnoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbTipoTurnoItemStateChanged
        String estado = cbTipoTurno.getSelectedItem().toString();
        switch (estado){
            case "AB-CD-CD-AB":
                tipoTurno = 1;
                break;
            case "CD-AB-AB-CD":
                tipoTurno = 2;
                break;
            case "AB-CD-AB-CD":
                tipoTurno = 3;
                break;
            case "CD-AB-CD-AB":
                tipoTurno = 4;
                break;
            case "AB-AB-AB-AB":
                tipoTurno = 5;
                break;
        }
        System.out.println(tipoTurno);
    }//GEN-LAST:event_cbTipoTurnoItemStateChanged

    private void rbSalaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rbSalaMouseClicked
        enSala = true;
    }//GEN-LAST:event_rbSalaMouseClicked

    private void rbAireLibreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rbAireLibreMouseClicked
        enSala = false;
    }//GEN-LAST:event_rbAireLibreMouseClicked

    private void bSaveChnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSaveChnActionPerformed
        mantenerCambios = true;
        this.dispose();
    }//GEN-LAST:event_bSaveChnActionPerformed

    private void bCantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCantActionPerformed
        mantenerCambios = false;
        this.dispose();
    }//GEN-LAST:event_bCantActionPerformed

    private void cbCalentamientoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCalentamientoActionPerformed
        if(cbCalentamiento.isSelected()){
            cbTipoTurno.setEnabled(false);
            tipoTurno = 3;
            calentamiento = true;
        }
        else{
            cbTipoTurno.setEnabled(true);
            calentamiento = false;
        }
    }//GEN-LAST:event_cbCalentamientoActionPerformed

    private void rbElimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbElimActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbElimActionPerformed

    public boolean getCalentamiento() {
        return calentamiento;
    }

    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PConfig.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PConfig.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PConfig.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PConfig.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                PConfig dialog = new PConfig(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bCant;
    private javax.swing.JButton bSaveChn;
    private javax.swing.JCheckBox cbCalentamiento;
    private javax.swing.JComboBox<String> cbTipoTurno;
    private javax.swing.ButtonGroup gbRound_Elim;
    private javax.swing.ButtonGroup gbTipoComp;
    private javax.swing.JPanel jPanelConfig;
    private javax.swing.JPanel jPanelRound;
    private javax.swing.JLabel lTipoTurno;
    private javax.swing.JRadioButton rbAireLibre;
    private javax.swing.JRadioButton rbElim;
    private javax.swing.JRadioButton rbRound;
    private javax.swing.JRadioButton rbSala;
    // End of variables declaration//GEN-END:variables

    public boolean getMantenerCambios(){
        return mantenerCambios;
    }
    
    public boolean getEnSala(){
        return enSala;
    }
    
    public boolean getEnRound(){
        return enRound;
    }
    
    public int getTipoTurno(){
        return tipoTurno;
    }
}
